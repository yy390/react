[
  {
    "id": 1,
    "image": "https://static001.infoq.cn/resource/image/55/99/55d312ab2f60f25ba257d22ababbf399.jpg",
    "title": "Java——注解",
    "desc": "Java 的注解（Annotation）是一种特殊的语法，用于在代码中添加元数据（Metadata）。",
    "content": "注解本身并不是代码的一部分，它们不会直接影响代码的执行，但可以在编译、类加载和运行时被读取和处理。注解为开发者提供了一种以非侵入性的方式为代码提供额外信息的手段。",
    "link": "/article/1",
    "author": "Mark",
    "publishTime": "2025-06-19",
    "views": 1523,
    "tags": [],
    "isPublic": true
  },
  {
    "id": 2,
    "image": "https://static001.infoq.cn/resource/image/55/99/55d312ab2f60f25ba257d22ababbf399.jpg",
    "title": "C++基础",
    "desc": "C++是在C语言的基础上发展而来的一种面向对象编程语言，它在保留C语言强大功能的同时，引入了许多新的特性。",
    "content": "在C/C++中，变量、函数和后面要学到的类都是大量存在的，这些变量、函数和类的名称将都存在于全局作用域中，可能会导致很多冲突。使用命名空间的目的是对标识符的名称进行本地化，以避免命名冲突或名字污染，namespace关键字的出现就是针对这种问题的。",
    "link": "/article/2",
    "author": "Perry Lu",
    "publishTime": "2024-07-20",
    "views": 988,
    "tags": [],
    "isPublic": true
  },
  {
    "id": 3,
    "image": "https://static001.infoq.cn/resource/image/55/99/55d312ab2f60f25ba257d22ababbf399.jpg",
    "title": "深入理解 React Hooks",
    "desc": "掌握 React Hooks 的核心概念与最佳实践。",
    "content": "掌握 React Hooks 的核心概念与最佳实践。",
    "link": "/article/3",
    "author": "Animaking",
    "publishTime": "2024-07-15",
    "views": 2345,
    "tags": ["React"],
    "isPublic": true
  },
  {
    "id": 4,
    "image": "https://static001.infoq.cn/resource/image/55/99/55d312ab2f60f25ba257d22ababbf399.jpg",
    "title": "Vue 3 性能优化技巧",
    "desc": "探索 Vue 3 中提升应用性能的各种方法。",
    "content": "探索 Vue 3 中提升应用性能的各种方法。",
    "link": "/article/4",
    "author": "Mark",
    "publishTime": "2024-07-10",
    "views": 1876,
    "tags": ["Vue"],
    "isPublic": true
  },
  {
    "id": 5,
    "image": "https://static001.infoq.cn/resource/image/92/6f/92d97ee589c6452b04692a6f26256c6f.jpg",
    "title": "TypeScript 完全入门指南",
    "desc": "从零开始，系统学习 TypeScript 的所有知识点。",
    "content": "TypeScript的优势1.帮助更好地重构代码，一个好的代码习惯是常常对自己写的代码进行小的重构，使得代码可维护性更强。但是对于很多线上运行的代码，代码测试覆盖率往往不是很高，有时候哪怕一个变量名的改动，都会牵一发而动全身。而对于使用ts编写的项目就不会有这种担心。ts的静态检查特性会帮助找出代码中有错误的部分。2.vscode等IDE的提示更加智能js是一门动态弱类型解释语言，变量声明后可以改变类型，而且类型需要在运行时才能确定。而ts的报错提示是在编译时，不是在运行时。所以使用ts带来的静态类型检查等特性将使得IDE的提示更加完善。3.类型声明本身就是非常好的文档当你接手一个有历史包袱的项目时，肯定会头疼于文档和代码注释的缺失，而对于ts来说，是可以做到代码即文档的，通过声明文件可以知道哪些字段的含义以及哪些字段是必填和选填的。",
    "link": "/article/5",
    "author": "Perry Lu",
    "publishTime": "2024-07-05",
    "views": 3102,
    "tags": ["TypeScript"],
    "isPublic": true
  },
  {
    "id": 6,
    "image": "https://static001.infoq.cn/resource/image/55/99/55d312ab2f60f25ba257d22ababbf399.jpg",
    "title": "Docker 容器化技术深度解析",
    "desc": "从入门到实践，全面掌握 Docker 核心技术。",
    "content": "从入门到实践，全面掌握 Docker 核心技术。",
    "link": "/article/6",
    "author": "CodeWizard",
    "publishTime": "2024-07-25",
    "views": 1950,
    "tags": ["Docker"],
    "isPublic": true
  },
  {
    "id": 7,
    "image": "https://static001.infoq.cn/resource/image/55/99/55d312ab2f60f25ba257d22ababbf399.jpg",
    "title": "Kubernetes 实战手册",
    "desc": "手把手教你部署、管理和扩展容器化应用。",
    "content": "手把手教你部署、管理和扩展容器化应用。",
    "link": "/article/7",
    "author": "DevMaster",
    "publishTime": "2024-07-24",
    "views": 2100,
    "tags": [],
    "isPublic": true
  },
  {
    "id": 8,
    "image": "https://static001.infoq.cn/resource/image/9a/43/9ac06eb84d57765dccfa0faba192f743.jpeg",
    "title": "C++入门",
    "desc": "深入探讨不同 Web 动画技术的性能优劣，提供实用的优化建议。",
    "content": "深入探讨不同 Web 动画技术的性能优劣，提供实用的优化建议。",
    "link": "/article/8",
    "author": "Animaking",
    "publishTime": "2024-07-26",
    "views": 2800,
    "tags": ["C++"],
    "isPublic": true
  },
  {
    "id": 9,
    "image": "https://static001.infoq.cn/resource/image/92/6f/92d97ee589c6452b04692a6f26256c6f.jpg",
    "title": "构建高可用系统的设计原则",
    "desc": "介绍分布式系统中实现高可用的核心原则与模式。",
    "content": "介绍分布式系统中实现高可用的核心原则与模式。",
    "link": "/article/9",
    "author": "CodeWizard",
    "publishTime": "2024-07-27",
    "views": 2500,
    "tags": [],
    "isPublic": true
  },
  {
    "id": 10,
    "image": "https://static001.infoq.cn/resource/image/55/99/55d312ab2f60f25ba257d22ababbf399.jpg",
    "title": "从零搭建高效的 CI/CD 流水线",
    "desc": "使用 Jenkins 和 GitLab CI 自动化你的构建、测试和部署流程。",
    "content": "使用 Jenkins 和 GitLab CI 自动化你的构建、测试和部署流程。",
    "link": "/article/10",
    "author": "DevMaster",
    "publishTime": "2024-07-28",
    "views": 2200,
    "tags": [],
    "isPublic": true
  }
] 